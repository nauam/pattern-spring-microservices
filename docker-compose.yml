---
version: '3.7'
services:
  ## Mongo Docker Compose Config
  data-mongo-product:
    container_name: data-mongo-product
    restart: always
    image: mongo:4.4.14-rc0-focal
    volumes:
      - ./volumes/data-mongo-product:/data/db
    ports:
      - "27017:27017"
    expose:
      - "27017"

  ## PostgreSQL Docker Compose Config
  data-postgres-order:
    container_name: data-postgres-order
    restart: always
    image: postgres
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./volumes/data-postgres-order:/data/postgres
    ports:
      - "5431:5431"
    expose:
      - "5431"
    command: -p 5431

  data-postgres-inventory:
    container_name: data-postgres-inventory
    restart: always
    image: postgres
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./volumes/data-postgres-inventory:/data/postgres
    ports:
      - "5430:5430"
    expose:
      - "5430"
    command: -p 5430

  ## Keycloak Config with Mysql database
  data-mysql-keycloak:
    container_name: data-mysql-keycloak
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak_db
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    volumes:
      - ./volumes/data-mysql-keycloak:/var/lib/mysql

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak_db
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./volumes/realms/:/opt/keycloak/data/import/
    ports:
      - "8080:8080"
    depends_on:
      - data-mysql-keycloak

  ## Kafka
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    container_name: broker
    image: confluentinc/cp-kafka:7.0.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  ## Zipkin
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    container_name: discovery-server
    image: nauam/discovery-server:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    depends_on:
      - zipkin

  ## API Gateway
  api-gateway:
    container_name: api-gateway
    image: nauam/api-gateway:latest
    ports:
      - "8181:8181"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  ## Product-Service Docker Compose Config
  product-service:
    container_name: product-service
    image: nauam/product-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - data-mongo-product
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: nauam/order-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - data-postgres-order
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: nauam/inventory-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - data-postgres-inventory
      - discovery-server
      - api-gateway

  ## Notification-Service Docker Compose Config
  notification-service:
    container_name: notification-service
    image: nauam/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway

  ## Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.37.1
    restart: always
    volumes:
      - ./volumes/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - product-service
      - inventory-service
      - order-service
      - notification-service

  ## Grafana
  grafana:
    container_name: grafana
    restart: always
    image: grafana/grafana-oss:8.5.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./volumes/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
